import jsPDF from "jspdf";

export async function generateSavingsPdf(data: any[]): Promise<Blob> {
  const doc = new jsPDF();

  // Title
  doc.setFontSize(20);
  doc.text("Savings & ROI Report", 20, 30);

  // Date
  doc.setFontSize(12);
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 45);

  // Summary
  doc.setFontSize(14);
  doc.text("Monthly Savings Summary", 20, 65);

  // Table headers
  doc.setFontSize(10);
  doc.text("Month", 20, 80);
  doc.text("Time Saved (hrs)", 60, 80);
  doc.text("Cost Saved ($)", 100, 80);
  doc.text("Plan Cost ($)", 140, 80);
  doc.text("ROI (%)", 180, 80);

  // Draw line under headers
  doc.line(20, 85, 200, 85);

  // Data rows
  let yPosition = 95;
  data.forEach((item, index) => {
    if (yPosition > 270) {
      // Add new page if we're running out of space
      doc.addPage();
      yPosition = 20;
    }

    doc.text(item.month.toString(), 20, yPosition);
    doc.text(item.timeSaved.toString(), 60, yPosition);
    doc.text(item.costSaved.toString(), 100, yPosition);
    doc.text(item.planCost.toString(), 140, yPosition);

    // Calculate ROI
    const roi =
      item.planCost > 0
        ? (((item.costSaved - item.planCost) / item.planCost) * 100).toFixed(1)
        : "0";
    doc.text(`${roi}%`, 180, yPosition);

    yPosition += 10;
  });

  // Total calculations
  const totalTimeSaved = data.reduce((sum, item) => sum + item.timeSaved, 0);
  const totalCostSaved = data.reduce((sum, item) => sum + item.costSaved, 0);
  const totalPlanCost = data.reduce((sum, item) => sum + item.planCost, 0);
  const overallROI =
    totalPlanCost > 0
      ? (((totalCostSaved - totalPlanCost) / totalPlanCost) * 100).toFixed(1)
      : "0";

  // Draw line above totals
  doc.line(20, yPosition + 5, 200, yPosition + 5);
  yPosition += 15;

  // Totals
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("TOTALS:", 20, yPosition);
  doc.text(totalTimeSaved.toString(), 60, yPosition);
  doc.text(totalCostSaved.toString(), 100, yPosition);
  doc.text(totalPlanCost.toString(), 140, yPosition);
  doc.text(`${overallROI}%`, 180, yPosition);

  // Footer
  doc.setFontSize(8);
  doc.setFont("helvetica", "normal");
  doc.text("Generated by Goshawk AI", 20, 285);

  return doc.output("blob");
}
